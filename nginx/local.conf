map $http_upgrade $connection_upgrade {

    default upgrade;
    ''      close;

}

upstream blockchain_stream {

       server blockchain:9944;
}

upstream backend_stream {

       server backend:5000;
}



# server {
#     listen 80 default;
#     return 301 https://$host$request_uri;
# }


server {

#     listen 443 ssl;
#     listen [::]:443 ssl;
     listen 80 default_server;
    server_name _;
    ssl_certificate      /etc/nginx/ssl/localhost.pem;
    ssl_certificate_key  /etc/nginx/ssl/localhost-key.pem;

    location / {
      proxy_pass http://frontend:80;
    }

    location ~ ^/(api|socket\.io)/ {

      proxy_pass http://backend_stream;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_read_timeout 300;
      proxy_connect_timeout 300;
      proxy_send_timeout 300;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

}


server {

	 listen 8443 ssl;
	 listen 8444;
     listen [::]:8443 ssl;


     ssl_certificate      /etc/nginx/ssl/localhost.pem;
     ssl_certificate_key  /etc/nginx/ssl/localhost-key.pem;
     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

      client_body_timeout 16s;
      client_header_timeout 16s;
      limit_req zone=global_zone;

      location / {
                 limit_req zone=global_zone;
                 limit_conn connectionzone 50;


                proxy_pass http://blockchain_stream;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

     }
}
